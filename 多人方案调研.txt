
使用集成方案

Rocket.Chat 开源IM系统部署

Rocket.Chat 是特性最丰富的 Slack 开源替代品之一。

主要功能：群组聊天，直接通信，私聊群，桌面通知，媒体嵌入，链接预览，文件上传，语音/视频 聊天，截图等等。Rocket.Chat 原生支持 Windows，Mac OS X ，Linux，iOS 和 Android 平台。Rocket.Chat 通过 hubot 集成了非常流行的服务，比如 GitHub，GitLab，Confluence，JIRA 等等。

高级的特性包括：OTR 消息，XMPP 多用户聊天，Kerberos 认证，p2p 文件分享等等。

以下教程是在 CentOS Linux release 7.2.1511 (Core) 下安装 Rocket.Chat，可以通过官方教程安装在这里：Deploying Rocket.Chat on Centos 7。

主要依赖三个工具 Nginx、CentOS 7、Mongodb






最具参考价值

WebRTC Experiments & Demos (各种功能分类开源Demo)
https://www.webrtc-experiment.com/

最具参考用户 muaz-khan 巴基斯坦人
https://github.com/muaz-khan/RTCMultiConnection
（项目大全）
https://github.com/muaz-khan/WebRTC-Experiment  


Mesh 方案
https://github.com/muaz-khan/RTCMultiConnection/blob/master/docs/ios-android.md

Android Mesh 实现源码
https://webrtcweb.com/cordova-apps/video-conferencing/
http://www.rtcmulticonnection.org/docs/Write-Android-Apps/

IOS Mesh 实现方法
https://www.rtcmulticonnection.org/docs/Write-iOS-Apps/


开源软件：
1. mediasoup
2. Janus
3. BigBlueButton
4 Apache Openmeetings


MCU 方案:   

licode     kurento
https://github.com/lynckia/licode
https://github.com/Kurento/kurento-media-server

licode
主要模块及实现语言：
1.Erizo：MCU模块，实现语言C++
2.erizoAPI：Node.js addon wrapper for Erizo，实现语言C++
3.erizo_controller：跟Rooms管理相关的服务，实现语言JS
4.nuve：跟Rooms管理相关的API，实现语言JS

接口（SDK）语言：
Client API: Javascript
Sercer API: node.js

优点：
接口简洁，服务轻量级，支持h264
缺点：
API文档比较简单且其他文档较少；客户端接口只有js的，没有android和IOS原生API；不是很稳定，经常中断


Kurento
主要模块及实现语言：
Kurento media server：KMS流媒体服务器，实现语言C++
接口（SDK）语言：
服务端SDK：java，node.js
客户端SDK：java，js
支持Json-Rpc

优点：
文档齐全，功能、封装API都比较齐全，对Android和IOS也有原生API支持，支持h264
缺点：
bug较多，不是很稳定，接口太多，所以使用起来相对复杂，Android和IOS缺少官方demo，因其中增加了视觉增强等图像处理功能，所以会有视频延迟风险







SFU 方案   

jitsi(非WebRTC实现, 兼容WebRtc标准)
Janus （除了作为GateWay 可以被当做SFU来使用）
https://github.com/jitsi/jitsi

功能（官方原文翻译）：
不像其他的视频会议技术，Jitsi Videobridge是jitsi的核心，将所有人的音视频传送给所有的参与者，而不是将他们混起来
能达到更低的延迟，更高的质量，并且如果你运行你自己的服务，这将是一个非常便于扩展和廉价的解决方案
Jitsi完全兼容webRTC这个开放的web通信标准
Jitsi支持高级的视频路由功能，比如同步广播、带宽检测、可扩展的视频编码等
Jitsi是用java和一些原生代码编写
接口（SDK）语言：
Libjitsi：java接口SDK，用于服务端开发
lib-jitsi-meet：javascript接口SDK，用于web客户端的开发
优点：
比较稳定，家族产品较多，即时通讯，电子白板，文件共享都有。2017年8月发布android和IOS原生API接口。
缺点：
协议用的是SIP和XMPP，编译部署过程过于复杂，依赖库较多，且文档比较少。缺少android和IOS的demo和文档。多人对讲时采用的是单路分发机制，对服务器网络等要求较高。



Kablink Conferencing 是一个开源的会议软件，团队可以通过它进行实时的通讯，与会者可以看到其他在线的人员并启动及时会议，会议可使用音频、聊天、白板、桌面共享和演示等功能。

http://openmeetings.apache.org/downloads.html
https://github.com/openmeetings



GateWay实现点对多点方案
Janus WebRTC Server
https://github.com/meetecho/janus-gateway




Mesh方案的实现
https://www.cnblogs.com/cther/p/4614391.html


资料汇总
https://blog.csdn.net/fei33423/article/details/79996334
https://www.cnblogs.com/lidabo/category/1002914.html

所有开源WebRTC项目简介
http://webrtc.org.cn/link/#medias

开源库链接
https://blog.csdn.net/zzuzzl/article/details/81534324

官方web实例
https://webrtc.github.io/samples/

26款 网络会议/视频会议开源软件
https://blog.csdn.net/u013488847/article/details/46452969


测试
https://testrtc.com/


多人视频方案介绍(2015)
http://www.cnblogs.com/lingyunhu/p/rtc28.html


方案一：

基于Webrtc和Janus的多人视频会议系统开发1--系统架构


我们开始研发自研的连麦系统，作为技术方案来说，现今支持浏览器直连基本上已经是刚需，所以webrtc是必须要兼容的，所以技术方案设计上决定是以webrtc协议为基础，支持多人会议，完全从0开始做不可取，经过对现有开源框架的研究比较后，决定在janus方案的基础上研发并逐步改进以符合需要，本系列文章就是对整改系统的研发过程的记录和总结，供大家参考。


虽然有些劣势，不过做为第一阶段尽快出成果来说，这个方案是比较合适的，只需要少量的工作即可看到成功：

1. 调度服务器，先实现简单的案容量来调度以及房间服务器的映射查询；

2.Janus服务器改造，上报自身状况，供调度服务器调度决策

3. Janus客服端SDK，当前Janus提供了web接入，android和ios接入demo代码，都能顺利连通，很遗憾的是翻遍整个网络，没有找到windows和Mac下的c++接入demo， 所以这块是先阶段的重点和难点，因为我们的产品windows原生客户端是很重要的一环。

调度服务器和Janus服务器状态上报都很简单在此不多讲，后续几篇文章主要讲如何开发windows和mac下的原生c++的janus客户端SDK.

1. https://blog.csdn.net/u011382962/article/details/81504789




方案二

http://webrtc.org.cn/20180817-webrtc-video-js/

如何使用WebRTC和Kurento媒体服务器,来建立视频会议App(一)  


方案三
https://blog.csdn.net/qq654129588/article/details/81583139
【WebRTC】自己做一个简单的sfu视频通讯demo

mediasoup



方案四   ViMeet
https://blog.csdn.net/zhangbijun1230/article/details/81749271
2，基于相关webrtc流服务开源改造如Licode之类,ViMeet选型相关改造，节省了大量时间。


方案5 实践解析：Electron实现跨平台视频会议的几种思路
实践解析：Electron实现跨平台视频会议的几种思路


开源：

https://github.com/lzming9511/webrtc


打造自己的视频会议系统 GGMeeting（附送源码）
http://www.cnblogs.com/justnow/p/4487201.html


小众方案 （闭源）
https://blog.csdn.net/elesos/article/details/79278513



第三方 收费方案  Zego
https://blog.csdn.net/sinat_20146421/article/details/81814252

AnyRtc 国内产品
https://www.anyrtc.io/
